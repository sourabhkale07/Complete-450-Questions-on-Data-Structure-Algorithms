#include <iostream>
#include<algorithm>

using namespace std;

void swap(int *a,int *b){
    int temp;
    temp = *a;
    *a = *b;
    *b= temp;
   }
   
void printarr(int a[],int n){
    for(int i=0;i<n;i++){
        cout<<a[i]<<" ";
    }
    cout<<endl;
}   

int main()
{
    int arr1[] = {1,3,5,7};
    int arr2[] = {0,2,6,8,9};
    
    int n = sizeof(arr1)/sizeof(arr1[0]);
    int m = sizeof(arr2)/ sizeof(arr2[0]);
    
    for(int i=0;i<m;i++){
        
        for(int j=0;j<n;j++){
            if(arr2[i]<arr1[j]){
                swap(&arr2[i],&arr1[j]);
            }
        }
    }
    sort(arr2,arr2+m);      // will sort the second array
    
    printarr(arr1,n);
    printarr(arr2,m);
    
    

    return 0;
}

// We get sorted arrays if we merge them we will get the final array

//Time complexity: O(n*m)

//Space Complexity: O(1) 
